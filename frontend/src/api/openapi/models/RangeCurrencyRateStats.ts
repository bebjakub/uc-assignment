/* tslint:disable */
/* eslint-disable */
/**
 * Exchange Rates
 * Exchange Rates API proxy for https://exchangerate-api.com
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RateStats } from './RateStats';
import {
    RateStatsFromJSON,
    RateStatsFromJSONTyped,
    RateStatsToJSON,
} from './RateStats';

/**
 * 
 * @export
 * @interface RangeCurrencyRateStats
 */
export interface RangeCurrencyRateStats {
    /**
     * YYYY-MM-DD
     * @type {string}
     * @memberof RangeCurrencyRateStats
     */
    dayFrom: string;
    /**
     * YYYY-MM-DD
     * @type {string}
     * @memberof RangeCurrencyRateStats
     */
    dayTo: string;
    /**
     * Currency Code
     * @type {string}
     * @memberof RangeCurrencyRateStats
     */
    currencyFrom: string;
    /**
     * Currency Code
     * @type {string}
     * @memberof RangeCurrencyRateStats
     */
    currencyTo: string;
    /**
     * 
     * @type {RateStats}
     * @memberof RangeCurrencyRateStats
     */
    minRate: RateStats;
    /**
     * 
     * @type {RateStats}
     * @memberof RangeCurrencyRateStats
     */
    maxRate: RateStats;
}

/**
 * Check if a given object implements the RangeCurrencyRateStats interface.
 */
export function instanceOfRangeCurrencyRateStats(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "dayFrom" in value;
    isInstance = isInstance && "dayTo" in value;
    isInstance = isInstance && "currencyFrom" in value;
    isInstance = isInstance && "currencyTo" in value;
    isInstance = isInstance && "minRate" in value;
    isInstance = isInstance && "maxRate" in value;

    return isInstance;
}

export function RangeCurrencyRateStatsFromJSON(json: any): RangeCurrencyRateStats {
    return RangeCurrencyRateStatsFromJSONTyped(json, false);
}

export function RangeCurrencyRateStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RangeCurrencyRateStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dayFrom': json['dayFrom'],
        'dayTo': json['dayTo'],
        'currencyFrom': json['currencyFrom'],
        'currencyTo': json['currencyTo'],
        'minRate': RateStatsFromJSON(json['minRate']),
        'maxRate': RateStatsFromJSON(json['maxRate']),
    };
}

export function RangeCurrencyRateStatsToJSON(value?: RangeCurrencyRateStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dayFrom': value.dayFrom,
        'dayTo': value.dayTo,
        'currencyFrom': value.currencyFrom,
        'currencyTo': value.currencyTo,
        'minRate': RateStatsToJSON(value.minRate),
        'maxRate': RateStatsToJSON(value.maxRate),
    };
}

